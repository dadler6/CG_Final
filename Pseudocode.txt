Idea for the algorithm...based on paper.

I. Initialization
	a. function that randomly partitions reads into contigs.
	b. function that for each contig, randomly places each read to a particular position in the contig from 0 to n-k+1. 
	c. initalize alpha contig lists of length N. (N = 10 kb?) 
	d. call consensus sequence function to initialize contig sequence.	


II. Consensus Sequence Step
	a. simple max consensus nucleotide function


III. Read Mapping
	i. p(s, o, y | .) 

	ii. functions
		a. p(o) - uniform. 
		b. p(s) - geometric distribution
		c. p(x,y) - noise model
		d. y* -> hamming distance function
		e. sampling
	iii. computing p(s,o | y*, . ) using approximate inference
		a. metropolis hastings function

IV. Merge
	a. merge check function (looks at overlaps at ends of contigs to determine if merge is necessary. use 15 k-mer overlap)

v. Likelihood
	a. compute likelihood.

algorithm on a high level:
	initialize
	while (delta likelihood > .1)
		read mapping
		consensus sequence
		check if you need to merge
		check likelihood.  

